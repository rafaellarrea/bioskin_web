// api/ai-blog/generate-topics.js
// Endpoint para generar temas sugeridos frescos con IA

import OpenAI from 'openai';

// Configurar OpenAI
let openai;
try {
  openai = new OpenAI({
    apiKey: process.env.OPENAI_API_KEY
  });
} catch (error) {
  console.error('Error configurando OpenAI:', error);
}

export default async function handler(req, res) {
  // Configurar CORS
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  if (req.method === 'OPTIONS') {
    return res.status(200).end();
  }

  if (req.method !== 'POST') {
    return res.status(405).json({
      success: false,
      message: 'M√©todo no permitido. Use POST.'
    });
  }

  // Validar OpenAI
  if (!openai || !process.env.OPENAI_API_KEY) {
    return res.status(500).json({
      success: false,
      message: 'Configuraci√≥n de IA no v√°lida. Verificar OPENAI_API_KEY',
      endpoint: '/api/ai-blog/generate-topics'
    });
  }

  const { category } = req.body;

  if (!category || !['medico-estetico', 'tecnico'].includes(category)) {
    return res.status(400).json({
      success: false,
      message: 'Categor√≠a requerida: medico-estetico o tecnico'
    });
  }

  try {
    console.log(`üéØ Generando temas frescos para categor√≠a: ${category}`);

    // Prompts espec√≠ficos para cada categor√≠a
    const prompts = {
      'medico-estetico': `Genera 5 temas innovadores y espec√≠ficos para blogs de medicina est√©tica. Los temas deben ser:
      - Actuales y relevantes para 2025
      - Espec√≠ficos (no gen√©ricos)
      - Relacionados con tratamientos, procedimientos o tendencias
      - Atractivos para pacientes interesados en est√©tica
      
      Ejemplos de formato:
      - "Combinaci√≥n de √°cido hialur√≥nico con bioestimuladores: protocolo 2025"
      - "Microagujas con PRP vs. tradicional: resultados comparativos"
      
      Devuelve solo la lista de 5 temas, uno por l√≠nea, sin numeraci√≥n ni vi√±etas.`,
      
      'tecnico': `Genera 5 temas t√©cnicos innovadores para blogs sobre equipamiento y tecnolog√≠a m√©dica est√©tica. Los temas deben ser:
      - T√©cnicos pero comprensibles
      - Sobre equipos, tecnolog√≠as o protocolos espec√≠ficos
      - Actuales para 2025
      - √ötiles para profesionales m√©dicos est√©ticos
      
      Ejemplos de formato:
      - "Calibraci√≥n avanzada de equipos IPL: nuevos est√°ndares FDA 2025"
      - "An√°lisis comparativo: HIFU focal vs. HIFU lineal en resultados"
      
      Devuelve solo la lista de 5 temas, uno por l√≠nea, sin numeraci√≥n ni vi√±etas.`
    };

    // Generar temas con OpenAI
    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        {
          role: "system",
          content: "Eres un especialista en medicina est√©tica que genera temas innovadores y espec√≠ficos para blogs profesionales."
        },
        {
          role: "user",
          content: prompts[category]
        }
      ],
      max_tokens: 500,
      temperature: 0.8 // M√°s creatividad para temas variados
    });

    const generatedContent = completion.choices[0].message.content;
    
    // Procesar los temas generados
    const topics = generatedContent
      .split('\n')
      .map(line => line.trim())
      .filter(line => line.length > 10) // Filtrar l√≠neas muy cortas
      .slice(0, 5); // Asegurar m√°ximo 5 temas

    console.log(`‚úÖ Generados ${topics.length} temas frescos para ${category}`);

    res.status(200).json({
      success: true,
      topics: topics,
      category: category,
      message: `${topics.length} temas frescos generados exitosamente`,
      meta: {
        endpoint: '/api/ai-blog/generate-topics',
        timestamp: new Date().toISOString(),
        model: 'gpt-4o-mini',
        temperature: 0.8
      }
    });

  } catch (error) {
    console.error('Error generando temas:', error);
    
    res.status(500).json({
      success: false,
      message: 'Error generando temas con IA',
      error: {
        message: error.message,
        name: error.name
      },
      endpoint: '/api/ai-blog/generate-topics'
    });
  }
}